version: "3.7"
services:
  metricq-manager:
    hostname: metricq
    image: metricq/metricq-manager:edge
    command: --couchdb-url http://couchdb-server:5984 --couchdb-user admin --couchdb-password admin amqp://admin:admin@rabbitmq-server/ vhost:/
    restart: unless-stopped
    depends_on:
      - rabbitmq-server
      - couchdb-server
      - couchdb-setup
    networks:
      - metricq-network

  db-hta-dummy:
    build:
      context: https://github.com/metricq/metricq-db-hta.git
    image: metricq-db-hta
    depends_on:
      - rabbitmq-server
      - metricq-manager
      - couchdb-setup
    environment:
      token: "db-hta-dummy"
      metricq_url: "amqp://admin:admin@rabbitmq-server"
      wait_for_rabbitmq_url: "rabbitmq-server:5672"
      WAITFORIT_TIMEOUT: 0
    restart: unless-stopped
    volumes:
      - hta-dummy:/var/hta
    networks:
      - metricq-network

  metricq-wizard-frontend:
    build:
      context: https://github.com/metricq/metricq-wizard-frontend.git
      args:
        - api_url=http://localhost:8000/api
        - metricq_websocket_url=ws://localhost:3003/
    image: metricq-wizard-frontend
    depends_on:
      - metricq-wizard-backend
    ports:
      - "127.0.0.1:3000:80"
    networks:
      - metricq-network

  metricq-wizard-backend:
    image: metricq/metricq-wizard-backend:edge
    environment:
      COUCHDB_URL: "http://admin:admin@couchdb-server:5984"
      RABBITMQ_URL: "amqp://admin:admin@rabbitmq-server/"
      RABBITMQ_API_URL: "http://admin:admin@rabbitmq-server:15672/api"
      RABBITMQ_DATA_HOST: "/"
    ports:
      - "127.0.0.1:8000:8000"
    depends_on:
      - rabbitmq-server
      - couchdb-server
    networks:
      - metricq-network

  metricq-source-dummy:
    build:
      context: https://github.com/metricq/metricq-cpp.git
    image: metricq-cxx
    depends_on:
      - rabbitmq-server
      - couchdb-setup
    networks:
      - metricq-network
    restart: unless-stopped
    command: "metricq-source-dummy -s amqp://admin:admin@rabbitmq-server"

  rabbitmq-server:
    image: rabbitmq:management-alpine
    environment:
      RABBITMQ_DEFAULT_USER: "admin"
      RABBITMQ_DEFAULT_PASS: "admin"
      RABBITMQ_DEFAULT_VHOST: "/"
      RABBITMQ_ERLANG_COOKIE: "Leibniz Butterkeks"
      RABBITMQ_NODENAME: "rabbit@rabbitmq-server"
    networks:
      - metricq-network
    ports:
      - "127.0.0.1:5672:5672"
      - "127.0.0.1:15672:15672"

  couchdb-server:
    image: couchdb:3
    environment:
      COUCHDB_USER: "admin"
      COUCHDB_PASSWORD: "admin"
    volumes:
      - couchdb-data:/opt/couchdb/data
    networks:
      - metricq-network
    ports:
      - "127.0.0.1:5984:5984"
    command: /opt/couchdb/bin/couchdb

  couchdb-setup:
    build:
      context: ./docker/couchdb-setup/
    image: metricq-couchdb-setup
    depends_on:
      - couchdb-server
    networks:
      - metricq-network

  grafana-server:
    build:
      context: https://github.com/metricq/grafana-metricq-datasource.git
    image: metricq-grafana-server
    ports:
      - "127.0.0.1:3001:3000"
    depends_on:
      - metricq-grafana
    networks:
      - metricq-network

  metricq-sink-websocket:
    image: metricq/metricq-sink-websocket:edge
    depends_on:
      - rabbitmq-server
    ports:
      - "127.0.0.1:3003:3000"
    networks:
      - metricq-network
    restart: unless-stopped
    command: --token sink-websocket amqp://admin:admin@rabbitmq-server

  metricq-source-rabbitmq:
    image: metricq/metricq-source-rabbitmq:edge
    networks:
      - metricq-network
    restart: unless-stopped
    command: --token source-rabbitmq --server amqp://admin:admin@rabbitmq-server

  metricq-source-sysinfo:
    image: metricq/metricq-source-sysinfo:edge
    restart: unless-stopped
    network_mode: "host"
    command: --token source-sysinfo amqp://admin:admin@localhost

  metricq-combinator:
    image: metricq/metricq-combinator:edge
    depends_on:
      - rabbitmq-server
    networks:
      - metricq-network
    restart: unless-stopped
    command: --token transformer-example-combinator --server amqp://admin:admin@rabbitmq-server

  metricq-source-snmp:
    image: metricq/metricq-source-snmp:edge
    networks:
      - metricq-network
    restart: unless-stopped
    command: --token source-snmp-example --server amqp://admin:admin@rabbitmq-server

  metricq-grafana:
    image: metricq/metricq-grafana:edge
    command: amqp://admin:admin@rabbitmq-server
    depends_on:
      - rabbitmq-server
    ports:
      - "127.0.0.1:4000:4000"
    restart: unless-stopped
    networks:
      - metricq-network

  metricq-webview:
    image: metricq/metricq-webview:edge
    environment:
      METRICQ_BACKEND: http://localhost:4000
    depends_on:
      - metricq-grafana
    ports:
      - "127.0.0.1:3002:80"
    restart: unless-stopped
    networks:
      - metricq-network

  metricq-explorer:
    image: metricq/metricq-explorer-frontend:edge
    environment:
      METRICQ_WIZARD_BACKEND: http://localhost:8000/api
    depends_on:
      - metricq-wizard-backend
    ports:
      - "127.0.0.1:3004:80"
    restart: unless-stopped
    networks:
      - metricq-network

  # rabbitmq-exporter:
  #   image: kbudde/rabbitmq-exporter
  #   ports:
  #     - "127.0.0.1:9419:9419"
  #   environment:
  #     - RABBIT_URL=http://rabbitmq-server:15672
  #     - RABBIT_USER=admin
  #     - RABBIT_PASSWORD=admin
  #   restart: unless-stopped
  #   depends_on:
  #     - rabbitmq-server
  #   networks:
  #     - metricq-network

networks:
  metricq-network:
    driver: bridge

volumes:
  hta-dummy:
    driver: local
  couchdb-data:
    driver: local
