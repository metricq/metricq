language: generic

dist: xenial

matrix:
  include:
    - os: linux
      env: CXX="g++-7" CC="gcc-7"
      compiler: gcc
      addons:
        apt:
          packages:
            - gcc-7
            - g++-7
            - cmake
            - cmake-data
            - libssl-dev
          sources: &sources
            - ubuntu-toolchain-r-test
    - os: linux
      env: CXX="g++-8" CC="gcc-8"
      compiler: gcc
      addons:
        apt:
          packages:
            - gcc-8
            - g++-8
            - cmake
            - cmake-data
            - libssl-dev
          sources: *sources
    - os: linux
      env: CXX="g++-9" CC="gcc-9"
      compiler: gcc
      addons:
        apt:
          packages:
            - gcc-9
            - g++-9
            - cmake
            - cmake-data
            - libssl-dev
          sources: *sources
    - os: linux
      env: CXX="clang++-5.0" CC="clang-5.0"
      compiler: clang
      addons:
        apt:
          packages:
            - clang-5.0
            - g++-8
            - cmake
            - cmake-data
            - protobuf-compiler
            - libssl-dev
          sources:
            - llvm-toolchain-xenial-5.0
            - ubuntu-toolchain-r-test
    - os: linux
      env: CXX="clang++-6.0" CC="clang-6.0"
      compiler: clang
      addons:
        apt:
          packages:
            - clang-6.0
            - g++-8
            - cmake
            - cmake-data
            - libssl-dev
          sources:
            - llvm-toolchain-xenial-6.0
            - ubuntu-toolchain-r-test
    - os: osx
      osx_image: xcode10
      addons:
        homebrew:
          packages:
            - openssl@1.1
    - os: osx
      osx_image: xcode10.1
      addons:
        homebrew:
          packages:
            - openssl@1.1

cache:
  directories:
    - ${TRAVIS_BUILD_DIR}/deps/protobuf-3.6.1

install:
  - PROTOBUF_VERSION=3.6.1 # Update cache too when changing this!
  - PROTOBUF_DIR=${TRAVIS_BUILD_DIR}/deps/protobuf-${PROTOBUF_VERSION}
  - |
    if [ -z "$(ls -A ${PROTOBUF_DIR})" ]; then
      wget https://github.com/protocolbuffers/protobuf/releases/download/v${PROTOBUF_VERSION}/protobuf-all-${PROTOBUF_VERSION}.tar.gz
      tar -xf protobuf-all-${PROTOBUF_VERSION}.tar.gz
      (cd protobuf-${PROTOBUF_VERSION} && ./configure --prefix=${PROTOBUF_DIR} && make -j2 install)
    fi
  - export CMAKE_PREFIX_PATH=${PROTOBUF_DIR}:${CMAKE_PREFIX_PATH}
  - export PROTOC=${PROTOBUF_DIR}/bin/protoc
script:
  - cmake --version
  - cmake -DOPENSSL_ROOT_DIR=/usr/local/opt/openssl@1.1/ .
  - make -j 2

before_deploy:
  - pyenv global 3.6.7
deploy:
  skip_cleanup: true
  provider: pypi
  user: __token__
  distributions: sdist bdist_wheel
  password:
    secure: iPt/b1jaYAlzxx3pCA0zl8A+GUu8TLzKg26140rLFfHr1IhTCqfzZIbj7kjHV9utYKQxFaO4LmsQdvB3cAas3T/srEj0wmEigNRdQBnLU5NGUkjJyDdkSCRDlF0uygQt5l4O44MXaaFGbc/HVoDDXtMoSADwjQA/pA5ApRVHYQPJpuioaeRtqBGXxOcLVkOCrYef/JXfEWgHZ3c9e2Tg20qetsh9OLq8ph2kP89IA3RIRHQqceVfeN4CRddnJXNSD9U7gn94ewVCu0jZngmC9OZYApg9gb8EusrieqrestUI/QhOb1DMYGmPughUcML4AVXQZzqOC16lmayaE4Y3awPyS9tJjPkVyhu7adWtMK/WLV/fcsfrkuOVZxx/FiwpbPht663Ybbh+YdFGXsub8zm5JWnnnolU9OFZP7B4I37amBsIqUQu/X4rnNSwWRpFr9lVam4kIu4DjaHN7jyQBxxZzbfZReBGaJLmdtgdqcrmAYLoiJ3cjzdxR/QkQWf+rlLZw9k/xNPmQ2REs9mCVnDDvp4eD2rU8A8waUwDBh1poA4QSm2mly8uN0sDM6EpPHTzAIdbq01U5Doqg/4xY/CmaWrPFaCzjSp1V1FdoKcslP9PxeHSDbdavhbU2LgI0RfWb3AxRIV33b0K77bQlCbbCGWnLu4JXs8YEc99ghg=
  on:
    all_branches: true
    condition: $CC = "gcc-9"