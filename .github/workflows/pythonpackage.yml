name: Python package

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Protoc
      uses: Arduino/actions/setup-protoc@master
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install .
    - name: Lint with flake8
      run: |
        pip install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 python --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 python --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Run mypy
      uses: kolonialno/mypy-action@v1
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        max-errors: 0
        paths: python/metricq
      
  release:
    needs: [build]
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.6
      uses: actions/setup-python@v1
      with:
        python-version: 3.6
    - name: Install Protoc
      uses: Arduino/actions/setup-protoc@master
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install wheel
        pip install .
    - name: Build Python distribution
      run: python setup.py sdist bdist_wheel
    - name: Upload distribution artifacts
      uses: actions/upload-artifact@v1
      with:
        name: distribution-packages
        path: dist/  
    - name: Publish a Python distribution to PyPI
      if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/python-v')
      uses: pypa/gh-action-pypi-publish@master
      with:
        user: __token__
        password: ${{ secrets.pypi_password }}
    - name: Reformat version number
      if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/python-v')
      id: reformat_release
      uses: frabert/replace-string-action@v1.1
      with:
        pattern: 'refs\/tags\/python-v([0-9.]+)'
        string: ${{ github.ref }}
        replace-with: '$1'
    - name: Create Release
      if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/python-v')
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ github.ref }}
        release_name: Python Release ${{ steps.reformat_release.outputs.replaced }}
        draft: false
        prerelease: false
